{"version":3,"file":"angular-imask.umd.js","sources":["../src/imask.directive.ts","../src/imask.module.ts"],"sourcesContent":["import {\r\n  Directive, ElementRef, Input, Output, forwardRef, Provider, Renderer2,\r\n  EventEmitter, OnDestroy, OnChanges, AfterViewInit,\r\n  Optional, Inject\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, COMPOSITION_BUFFER_MODE } from '@angular/forms';\r\nimport { ÉµgetDOM as getDOM } from '@angular/platform-browser';\r\nimport IMask from 'imask';\r\n\r\n\r\nfunction _isAndroid(): boolean {\r\n  const userAgent = getDOM() ? getDOM().getUserAgent() : '';\r\n  return /android (\\d+)/.test(userAgent.toLowerCase());\r\n}\r\n\r\n\r\nexport const MASKEDINPUT_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => IMaskDirective),\r\n  multi: true\r\n};\r\n\r\nconst DEFAULT_IMASK_ELEMENT = elementRef => elementRef.nativeElement;\r\n@Directive({\r\n  selector: '[imask]',\r\n  host: {\r\n    '(input)': '_handleInput($event.target.value)',\r\n    '(blur)': 'onTouched()',\r\n    '(compositionstart)': '_compositionStart()',\r\n    '(compositionend)': '_compositionEnd($event.target.value)'\r\n  },\r\n  providers: [MASKEDINPUT_VALUE_ACCESSOR]\r\n})\r\nexport class IMaskDirective implements ControlValueAccessor, AfterViewInit, OnDestroy, OnChanges {\r\n  maskRef: any;\r\n  onTouched: any;\r\n  onChange: any;\r\n  private viewInitialized;\r\n  private _composing;\r\n\r\n  @Input() imask;\r\n  @Input() unmask?: boolean|'typed';\r\n  @Input() imaskElement: (elementRef: any, directiveRef: any) => any;\r\n  @Output() accept: EventEmitter<any>;\r\n  @Output() complete: EventEmitter<any>;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _renderer: Renderer2,\r\n              @Optional() @Inject(COMPOSITION_BUFFER_MODE)private _compositionMode: boolean) {\r\n    // init here to support AOT\r\n    this.onTouched = () => {};\r\n    this.onChange = () => {};\r\n    this.imaskElement = DEFAULT_IMASK_ELEMENT;\r\n    this.accept = new EventEmitter();\r\n    this.complete = new EventEmitter();\r\n    this.viewInitialized = false;\r\n    this._composing = false;\r\n\r\n    if (this._compositionMode == null) {\r\n      this._compositionMode = !_isAndroid();\r\n    }\r\n  }\r\n\r\n  get element () {\r\n    return this.imaskElement(this._elementRef, this);\r\n  }\r\n\r\n  get maskValue () {\r\n    if (!this.maskRef) return this.element.value;\r\n\r\n    if (this.unmask === 'typed') return this.maskRef.typedValue;\r\n    if (this.unmask) return this.maskRef.unmaskedValue;\r\n    return this.maskRef.value;\r\n  }\r\n\r\n  set maskValue (value) {\r\n    if (this.maskRef) {\r\n      if (this.unmask === 'typed') this.maskRef.typedValue = value;\r\n      else if (this.unmask) this.maskRef.unmaskedValue = value;\r\n      else this.maskRef.value = value;\r\n    } else {\r\n      this._renderer.setProperty(this.element, 'value', value);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.imask) return;\r\n\r\n    this.initMask();\r\n    this.viewInitialized = true;\r\n  }\r\n\r\n  ngOnChanges(changes) {\r\n    if (changes.elementRef && !this.imaskElement) this.imaskElement = DEFAULT_IMASK_ELEMENT;\r\n\r\n    if (!changes.imask || !this.viewInitialized) return;\r\n\r\n    if (this.imask) {\r\n      if (this.maskRef) this.maskRef.updateOptions(this.imask);\r\n      else {\r\n        this.initMask();\r\n        this.onChange(this.maskValue);\r\n      }\r\n    } else {\r\n      this.destroyMask();\r\n    }\r\n  }\r\n\r\n  destroyMask () {\r\n    if (this.maskRef) {\r\n      this.maskRef.destroy();\r\n      delete this.maskRef;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy () {\r\n    this.destroyMask();\r\n    this.accept.complete();\r\n    this.complete.complete();\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    value = value == null ? '' : value;\r\n\r\n    if (this.maskRef) this.maskValue = value;\r\n    else this._renderer.setProperty(this.element, 'value', value);\r\n  }\r\n\r\n  _onAccept () {\r\n    this.onChange(this.maskValue);\r\n    this.onTouched();\r\n    this.accept.emit(this.maskValue);\r\n  }\r\n\r\n  _onComplete () {\r\n    this.complete.emit(this.maskValue);\r\n  }\r\n\r\n  private initMask () {\r\n    this.maskRef = new IMask(this.element, this.imask)\r\n      .on('accept', this._onAccept.bind(this))\r\n      .on('complete', this._onComplete.bind(this));\r\n  }\r\n\r\n  setDisabledState (isDisabled: boolean) {\r\n    this._renderer.setProperty(this.element, 'disabled', isDisabled)\r\n  }\r\n\r\n  registerOnChange(fn: (_: any) => void): void { this.onChange = fn }\r\n  registerOnTouched(fn: () => void): void { this.onTouched = fn }\r\n\r\n  _handleInput(value: any): void {\r\n    // if mask is attached all input goes throw mask\r\n    if (this.maskRef) return;\r\n\r\n    if (!this._compositionMode || (this._compositionMode && !this._composing)) {\r\n      this.onChange(value);\r\n    }\r\n  }\r\n\r\n  _compositionStart(): void { this._composing = true; }\r\n\r\n  _compositionEnd(value: any): void {\r\n    this._composing = false;\r\n    this._compositionMode && this._handleInput(value);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {IMaskDirective} from './imask.directive';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [IMaskDirective],\r\n  exports: [IMaskDirective]\r\n})\r\nexport class IMaskModule {}\r\n"],"names":["getDOM","NG_VALUE_ACCESSOR","forwardRef","EventEmitter","Input","Output","Directive","Optional","Inject","COMPOSITION_BUFFER_MODE","ElementRef","Renderer2","NgModule","CommonModule"],"mappings":"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"}